[package]
name = "std_miri_test"
version = "0.0.0"
license = "MIT OR Apache-2.0"
repository = "https://github.com/rust-lang/rust.git"
description = "The Rust Standard Library"
autotests = false
autobenches = false
edition = "2021"

[lib]
name = "std_miri_test"
path = "../library/libstd/src/lib.rs"

[dependencies]
alloc = { path = "../library/alloc" }
cfg-if = { version = "0.1.8" }
panic_unwind = { path = "../library/panic_unwind", optional = true }
panic_abort = { path = "../library/panic_abort" }
core = { path = "../library/core" }
libc = { version = "0.2.116", default-features = false }
compiler_builtins = { version = "0.1.69" }
profiler_builtins = { path = "../library/profiler_builtins", optional = true }
unwind = { path = "../library/unwind" }
hashbrown = { version = "0.12", default-features = false }
std_detect = { path = "../library/stdarch/crates/std_detect", default-features = false }

# Dependencies of the `backtrace` crate
addr2line = { version = "0.16.0", optional = true, default-features = false }
rustc-demangle = { version = "0.1.21" }
miniz_oxide = { version = "0.4.0", optional = true, default-features = false }
[dependencies.object]
version = "0.26.1"
optional = true
default-features = false
features = ['read_core', 'elf', 'macho', 'pe', 'unaligned', 'archive']

[dev-dependencies]
rand = "0.7"

[target.'cfg(any(all(target_family = "wasm", not(target_os = "emscripten")), all(target_vendor = "fortanix", target_env = "sgx")))'.dependencies]
dlmalloc = { version = "0.2.3", features = ['rustc-dep-of-std'] }

[target.x86_64-fortanix-unknown-sgx.dependencies]
fortanix-sgx-abi = { version = "0.3.2", features = ['rustc-dep-of-std'] }

[target.'cfg(target_os = "hermit")'.dependencies]
hermit-abi = { version = "0.2.0", features = ['rustc-dep-of-std'] }

[target.wasm32-wasi.dependencies]
wasi = { version = "0.11.0", features = ['rustc-dep-of-std'], default-features = false }

[features]
# Empty this crate
default = ["miri-test-libstd"]
miri-test-libstd = []

[[test]]
name = "env"
path = "../library/libstd/tests/env.rs"

[[test]]
name = "thread"
path = "../library/libstd/tests/thread.rs"

# Deliberately skipping run-time-detect
