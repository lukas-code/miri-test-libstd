name: CI

on:
  push:
    branches:
      - 'master'
      - 'wtf'
  pull_request:
    branches:
      - 'master'
  schedule:
    - cron: '00 2 * * *' # At 02:00 UTC every day (like rustup-components-history).

jobs:
  test-core:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup environment
        run: bash ./ci-setup.sh
      - name: Test
        run: bash ./ci-test.sh core

  test-alloc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
          # FIXME: this does not work as intended!
          # GHA caches are write-once, so if xargo updates we will keep having
          # old xargo in our cache.
          key: ${{ runner.os }}-cargo-bin
      - name: Setup environment
        run: bash ./ci-setup.sh
      - name: Test
        run: bash ./ci-test.sh alloc

  test-simd:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
          key: ${{ runner.os }}-cargo-bin
      - name: Setup environment
        run: bash ./ci-setup.sh
      - name: Test
        run: bash ./ci-test.sh simd

  test-more:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
          key: ${{ runner.os }}-cargo-bin
      - name: Setup environment
        run: bash ./ci-setup.sh
      - name: Test
        run: bash ./ci-test.sh more

  # Send a Zulip notification when a cron job fails
  cron-fail-notify:
    name: cronjob failure notification
    runs-on: ubuntu-latest
    needs: [test-core, test-alloc, test-simd, test-more]
    if: github.event_name == 'schedule' && (failure() || cancelled())
    steps:
      - name: Install zulip-send
        run: pip3 install zulip
      - name: Send Zulip notification
        shell: bash
        env:
          ZULIP_BOT_EMAIL: ${{ secrets.ZULIP_BOT_EMAIL }}
          ZULIP_API_TOKEN: ${{ secrets.ZULIP_API_TOKEN }}
        run: |
          ~/.local/bin/zulip-send --stream miri --subject "Cron Job Failure (miri-test-libstd, $(date -u +%Y-%m))" \
            --message 'Dear @**RalfJ**,

          The standard library test suite is failing under Miri. Would you mind investigating this issue?

          Thanks in advance!
          Sincerely,
          The Miri Cronjobs Bot' \
            --user $ZULIP_BOT_EMAIL --api-key $ZULIP_API_TOKEN --site https://rust-lang.zulipchat.com
